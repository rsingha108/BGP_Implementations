---
version: '3'

networks:
  test_net1:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
       - subnet: 3.0.0.0/24
         gateway: 3.0.0.1

  test_net2:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
       - subnet: 4.0.0.0/24
         gateway: 4.0.0.1
  
  test_net3:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
       - subnet: 5.0.0.0/24
         gateway: 5.0.0.1


services:
  exabgp_1:
    image: "mikenowak/exabgp:latest"
    container_name: exabgp_1
    privileged: true
    volumes:
      - ./exabgp1:/exabgp:rw
    networks:
      test_net1:
        ipv4_address: 3.0.0.2
    entrypoint: tail -f /dev/null # run this script when the container starts. This is a trick to keep the container running.
    
  frr_2:
    image: "github/frr10:latest"
    container_name: frr_2
    privileged: true
    volumes:
      - ./frr2:/etc/frr:rw
    command: "/usr/lib/frr/docker-start" # run this script when the container starts 
    networks:
      test_net1:
        ipv4_address: 3.0.0.3
      test_net2:
        ipv4_address: 4.0.0.2
  
  frr_3:
    image: "github/frr10:latest"
    container_name: frr_3
    privileged: true
    volumes:
      - ./frr3:/etc/frr:rw
    command: "/usr/lib/frr/docker-start" # run this script when the container starts 
    networks:
      test_net2:
        ipv4_address: 4.0.0.3
      test_net3:
        ipv4_address: 5.0.0.2

  frr_4:
    image: "github/frr10:latest"
    container_name: frr_4
    privileged: true
    volumes:
      - ./frr4:/etc/frr:rw
    command: "/usr/lib/frr/docker-start" # run this script when the container starts 
    networks:
      test_net3:
        ipv4_address: 5.0.0.3
  
  
  
    

